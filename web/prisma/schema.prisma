// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                     String       @id @default(cuid())
  name                   String?
  fullName               String?
  email                  String?      @unique
  emailVerified          DateTime?
  image                  String?
  role                   UserRole     @default(CREATOR)
  accounts               Account[]
  sessions               Session[]
  walletAddress          String?      @unique
  bio                    String?      @db.Text
  skills                 String[]
  birthday               DateTime?
  location               String?
  website                String?
  github                 String?
  twitter                String?
  linkedin               String?
  experience             Int?         @default(0) // Years of experience
  education              String?
  languages              String[]     @default([])
  availability           Availability @default(FULL_TIME)
  hasCompletedOnboarding Boolean      @default(false)
  projects               Project[]
  createdAt              DateTime     @default(now())
  updatedAt              DateTime     @updatedAt
}

model Project {
  id          String   @id @default(cuid())
  title       String
  description String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  creator     User     @relation(fields: [creatorId], references: [id])
  creatorId   String
  category    Category @default(OTHER)
  status      Status   @default(OPEN)
  tags        String[]
}

enum UserRole {
  DEVELOPER
  DESIGNER
  CREATOR
  WRITER
}

enum Category {
  DEVELOPMENT
  DESIGN
  CONTENT
  MARKETING
  OTHER
}

enum Status {
  OPEN
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum Availability {
  FULL_TIME
  PART_TIME
  CONTRACT
  FREELANCE
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
