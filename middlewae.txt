import { NextResponse } from 'next/server';
import { withAuth } from 'next-auth/middleware';

export default withAuth(
  function middleware(req) {
    const token = req.nextauth.token;
    const path = req.nextUrl.pathname;

    // If user is trying to access onboarding but has already completed it, redirect to dashboard
    if (path === '/onboarding' && token?.hasCompletedOnboarding) {
      return NextResponse.redirect(new URL('/dashboard', req.url));
    }

    // If user hasn't completed onboarding and tries to access dashboard, redirect to onboarding
    if (path.startsWith('/dashboard') && !token?.hasCompletedOnboarding) {
      return NextResponse.redirect(new URL('/onboarding', req.url));
    }

    return NextResponse.next();
  },
  {
    pages: {
      signIn: "/auth/signin",
    },
    callbacks: {
      authorized: ({ token }) => !!token,
    },
  }
);

export const config = {
  matcher: [
    "/dashboard/:path*",
    "/settings/:path*",
    "/api/user/:path*",
    "/onboarding",
  ],
}; 